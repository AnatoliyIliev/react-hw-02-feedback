{"version":3,"sources":["App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["App","state","good","neutral","bad","countGoodFeedback","setState","prevState","countNeutralFeedback","countBadFeedback","this","Math","floor","countTotalFeedback","className","styles","button","type","onClick","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iOA0EeA,E,4MArEbC,MAAQ,CACFC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGXC,kBAAoB,WAClB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,KAAMK,EAAUL,KAAO,O,EAI3BM,qBAAuB,WAErB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,QAASI,EAAUJ,QAAU,O,EAIjCM,iBAAmB,WACjB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BH,IAAKG,EAAUH,IAAM,O,wDAIzB,WACE,OACCM,KAAKT,MAAMC,KAAOQ,KAAKT,MAAME,QAAUO,KAAKT,MAAMG,M,6CAIrD,WAEE,OADiBO,KAAKC,MAAQF,KAAKT,MAAMC,KAAOQ,KAAKG,qBAAwB,O,oBAI7E,WACI,OACI,gCACI,uDACA,gCACI,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAASR,KAAKL,kBAA9D,mBACA,wBAAQS,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAASR,KAAKF,qBAA9D,sBACA,wBAAQM,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAASR,KAAKD,iBAA9D,qBAEJ,4CAGF,+BACI,wCAAWC,KAAKT,MAAMC,QACtB,2CAAcQ,KAAKT,MAAME,WACzB,uCAAUO,KAAKT,MAAMG,OACrB,yCAAYM,KAAKG,wBACjB,uDAA0BH,KAAKS,kCAA/B,iB,GAtDAC,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.1b40b848.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport styles from './components/FeedbackOptions/FeedbackOptions.module.scss'\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n  };\r\n\r\n  countGoodFeedback = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n\r\n  countNeutralFeedback = () => {\r\n\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n\r\n  countBadFeedback = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n  \r\n  countTotalFeedback() {\r\n    return(    \r\n     this.state.good + this.state.neutral + this.state.bad)\r\n    };\r\n  \r\n\r\n  countPositiveFeedbackPercentage() {\r\n    let percentage = Math.floor(( this.state.good / this.countTotalFeedback()) * 100);  \r\n    return percentage;\r\n  };\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Please leave feedback</h1>\r\n                <div>\r\n                    <button className={styles.button} type=\"button\" onClick={this.countGoodFeedback}> Good</button>\r\n                    <button className={styles.button} type=\"button\" onClick={this.countNeutralFeedback}> Neutral</button>\r\n                    <button className={styles.button} type=\"button\" onClick={this.countBadFeedback}> Bad</button>\r\n                </div>\r\n                <h2>Statistics</h2>\r\n            \r\n            {\r\n              <ul>       \r\n                  <li>Good: {this.state.good}</li>\r\n                  <li>Neutral: {this.state.neutral}</li>\r\n                  <li>Bad: {this.state.bad}</li>\r\n                  <li>Total: {this.countTotalFeedback()}</li>\r\n                  <li>Positive percentage: {this.countPositiveFeedbackPercentage()}%</li>     \r\n              </ul>\r\n            }\r\n            </div>\r\n        ) \r\n    };\r\n}\r\n// function App() {\r\n//   return (\r\n//     <div>\r\n//       <Feedback/>\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3OY6i\"};"],"sourceRoot":""}